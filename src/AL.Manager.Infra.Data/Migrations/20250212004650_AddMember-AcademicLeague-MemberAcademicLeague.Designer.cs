// <auto-generated />
using System;
using AL.Manager.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AL.Manager.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250212004650_AddMember-AcademicLeague-MemberAcademicLeague")]
    partial class AddMemberAcademicLeagueMemberAcademicLeague
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AL.Manager.Domain.Entities.AcademicLeague", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AcademicLeague");
                });

            modelBuilder.Entity("AL.Manager.Domain.Entities.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("AL.Manager.Domain.Entities.MemberAcademicLeague", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AcademicLeagueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AcademicLiagueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AcademicLeagueId");

                    b.HasIndex("MemberId");

                    b.ToTable("MemberAcademicLeague");
                });

            modelBuilder.Entity("AcademicLeagueMember", b =>
                {
                    b.Property<Guid>("AcademicLeaguesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MembersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AcademicLeaguesId", "MembersId");

                    b.HasIndex("MembersId");

                    b.ToTable("AcademicLeagueMember");
                });

            modelBuilder.Entity("AL.Manager.Domain.Entities.MemberAcademicLeague", b =>
                {
                    b.HasOne("AL.Manager.Domain.Entities.AcademicLeague", null)
                        .WithMany("MemberAcademicLeagues")
                        .HasForeignKey("AcademicLeagueId");

                    b.HasOne("AL.Manager.Domain.Entities.Member", null)
                        .WithMany("MemberAcademicLeagues")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AcademicLeagueMember", b =>
                {
                    b.HasOne("AL.Manager.Domain.Entities.AcademicLeague", null)
                        .WithMany()
                        .HasForeignKey("AcademicLeaguesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AL.Manager.Domain.Entities.Member", null)
                        .WithMany()
                        .HasForeignKey("MembersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AL.Manager.Domain.Entities.AcademicLeague", b =>
                {
                    b.Navigation("MemberAcademicLeagues");
                });

            modelBuilder.Entity("AL.Manager.Domain.Entities.Member", b =>
                {
                    b.Navigation("MemberAcademicLeagues");
                });
#pragma warning restore 612, 618
        }
    }
}
